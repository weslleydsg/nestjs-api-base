version: '3.7'

services:
  app:
    image: node:lts-alpine
    restart: always
    env_file:
      - .env
    depends_on:
      - postgres
      - mongo
      - redis
    ports:
      - ${APP_PORT}:3333
    volumes:
      - ./package.json:/usr/app/package.json
      - ./dist:/usr/app/dist
    working_dir: /usr/app
    command: sh -c "yarn install --prod && yarn migration:run && yarn start:prod"
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '5'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`api.localhost`)'

  reverse-proxy:
    image: traefik:v2.2
    command:
      - --api.insecure=true
      - --providers.docker.exposedbydefault=false
    ports:
      - '80:80'
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  redis:
    container_name: learning-mongo
    image: redis:6.0-rc3-alpine
    ports:
      - ${REDIS_PORT}:6379

  postgres:
    image: postgres:12.2-alpine
    restart: always
    ports:
      - ${DB_PORT}:5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./dbdata/pg:/var/lib/postgresql/data

  mongo:
    image: mongo:4.2.6
    restart: always
    ports:
      - ${MONGO_PORT}:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASS}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
      MONGO_USERNAME: ${MONGO_DB_USER}
      MONGO_PASSWORD: ${MONGO_DB_PASS}
    volumes:
      - ./dbdata/mongo:/data/db
      - ./init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
